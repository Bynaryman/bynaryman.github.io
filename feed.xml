<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://bynaryman.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://bynaryman.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-20T19:05:16+00:00</updated><id>https://bynaryman.github.io/feed.xml</id><title type="html">blank</title><subtitle>My personal webpage including my academic and industrial work as well as my artistic hobbies. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">My take on Manim Slides</title><link href="https://bynaryman.github.io/blog/2024/manim-slides/" rel="alternate" type="text/html" title="My take on Manim Slides"/><published>2024-10-19T19:00:00+00:00</published><updated>2024-10-19T19:00:00+00:00</updated><id>https://bynaryman.github.io/blog/2024/manim-slides</id><content type="html" xml:base="https://bynaryman.github.io/blog/2024/manim-slides/"><![CDATA[<p>An intro text I will redact.</p> <div class="row mt-5"> <div class="col-sm mt-3 mt-md-0"> <div style="position:relative;padding-bottom:56.25%;"> <iframe style="width:100%;height:100%;position:absolute;left:0px;top:0px;" frameborder="0" width="100%" height="100%" allowfullscreen="" allow="autoplay" src="/assets/html/iframe.html"> </iframe> </div> </div> </div> <div class="caption"> These are interactive slides with animations rendered in python + manim from 3b1b. </div>]]></content><author><name></name></author><category term="science"/><category term="videos"/><category term="science"/><category term="communication"/><summary type="html"><![CDATA[I am currently trying to generate manim slides and to embed them in an Iframe for website rendering.]]></summary></entry><entry><title type="html">ADA Wavetables</title><link href="https://bynaryman.github.io/blog/2024/ada-wavetable/" rel="alternate" type="text/html" title="ADA Wavetables"/><published>2024-08-24T19:00:00+00:00</published><updated>2024-08-24T19:00:00+00:00</updated><id>https://bynaryman.github.io/blog/2024/ada-wavetable</id><content type="html" xml:base="https://bynaryman.github.io/blog/2024/ada-wavetable/"><![CDATA[<p>With a final objective that diverges from this, i.e., building a mega drone out of a video, I ended up sampling my cat to play around with a Python library called <a href="https://github.com/harveyormston/osc_gen">osc_gen</a>, which is made to craft wavetables. After a few modifications, I took the direction of playing around with the visualization class helper they provide and added this rotating 3D wireframe.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/rotation_movie.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" autoplay="" controls="" loop=""/> </figure> </div> </div> <div class="caption text-center mt-2"> **Spinning the wireframe made of the aggregation of the 32 waves of 128 points representing what my cat could sound like.** </div> <p>Another nice objective was to be able to use the wavetable in a music production software like <strong>Ableton</strong>. The only thing to know was that Ableton needs 1024-point cycles. Then, split the generated wav to build the different cycles, and it can perform interpolation on top of that or keep the user table as is.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ableton_waveforms-480.webp 480w,/assets/img/ableton_waveforms-800.webp 800w,/assets/img/ableton_waveforms-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ableton_waveforms.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption text-center mt-2"> **Few lines of code to generate rich wavetables readable in modern DAWs such as Ableton 11.** </div>]]></content><author><name></name></author><category term="arte-science"/><category term="videos"/><category term="art"/><category term="wavetable"/><category term="music"/><category term="synthesis"/><summary type="html"><![CDATA[Sampling my cat and performing Wavetable synthesis out of it]]></summary></entry><entry><title type="html">ROM à ranger</title><link href="https://bynaryman.github.io/blog/2024/rom-a-ranger/" rel="alternate" type="text/html" title="ROM à ranger"/><published>2024-08-19T19:00:00+00:00</published><updated>2024-08-19T19:00:00+00:00</updated><id>https://bynaryman.github.io/blog/2024/rom-a-ranger</id><content type="html" xml:base="https://bynaryman.github.io/blog/2024/rom-a-ranger/"><![CDATA[<p>Exploring the 2D projection of a ray-traced render of one of my taped-out chips, I implemented an algorithm that partially sorts pixels by color within each column. Each frame in the sequence is progressively sorted to varying degrees, culminating in a video that transitions smoothly from a disordered to an ordered state. The final video is then reversed, creating a seamless infinite loop.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/merged_output_video.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" autoplay="" controls="" loop=""/> </figure> </div> </div> <div class="caption"> Consistently arranging, re-arranging, de-arranging pixels or standard cells. </div>]]></content><author><name></name></author><category term="arte-science"/><category term="videos"/><category term="art"/><category term="tapeout"/><category term="raytracing"/><category term="sorting"/><summary type="html"><![CDATA[I have been experimenting with unveiling and sorting frame pixels to showcase the Teras design.]]></summary></entry></feed>